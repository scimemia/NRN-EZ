//Version 1.1.7
objref mloc, mcust, mtime

mloc = newMat("./***PATH***/syn_loc.dat")
mtime = newMat("./***PATH***/syn_time.dat")
mcust = newMat("./***PATH***/~~**CUSTOM**~~.dat")

nsyn=mloc.nrow

objref rsyn_//~~~STIMVAR~~~//[nsyn], nc_//~~~STIMVAR~~~//[nsyn]

objref s_//~~~STIMVAR~~~//[nsyn]


for n = 0, nsyn-1 {
    dist = mloc.x[n][1]
//~~~SOMA~~~//
    if (mloc.x[n][0] == 0) {
       soma[dist] {

           s_//~~~STIMVAR~~~//[n] = new NetStims(rel)
           s_//~~~STIMVAR~~~//[n].interval=0  //time between spikes
           s_//~~~STIMVAR~~~//[n].number = 1   ///number of spikes
           s_//~~~STIMVAR~~~//[n].start=mtime.x[n][0]   ///start of first spike
           s_//~~~STIMVAR~~~//[n].noise=0

           	rsyn_//~~~STIMVAR~~~//[n] = new ~~**CUSTOM**~~(rel)
           	nc_//~~~STIMVAR~~~//[n] = new NetCon(s_//~~~STIMVAR~~~//[n],rsyn_//~~~STIMVAR~~~//[n],0,0,mcust.x[n][0])  //source, target, threshold, delay, weight
	   }
   	}
//~~~SOMA~~~//
//~~~APICAL~~~//
    if (mloc.x[n][0] == 3) {
       apical[dist] {

           s_//~~~STIMVAR~~~//[n] = new NetStims(rel)
           s_//~~~STIMVAR~~~//[n].interval=0  //time between spikes
           s_//~~~STIMVAR~~~//[n].number = 1   ///number of spikes
           s_//~~~STIMVAR~~~//[n].start=mtime.x[n][0]   ///start of first spike
           s_//~~~STIMVAR~~~//[n].noise=0

          	rsyn_//~~~STIMVAR~~~//[n] = new ~~**CUSTOM**~~(rel)
          	nc_//~~~STIMVAR~~~//[n] = new NetCon(s_//~~~STIMVAR~~~//[n],rsyn_//~~~STIMVAR~~~//[n],0,0,mcust.x[n][0])  //source, target, threshold, delay, weight
	  
       	   }
       }
//~~~APICAL~~~//
//~~~BASAL~~~//
    if (mloc.x[n][0] == 2) {
       basal[dist] {

           s_//~~~STIMVAR~~~//[n] = new NetStims(rel)
           s_//~~~STIMVAR~~~//[n].interval=0  //time between spikes
           s_//~~~STIMVAR~~~//[n].number = 1   ///number of spikes
           s_//~~~STIMVAR~~~//[n].start=mtime.x[n][0]   ///start of first spike
           s_//~~~STIMVAR~~~//[n].noise=0

          	rsyn_//~~~STIMVAR~~~//[n] = new ~~**CUSTOM**~~(rel)
          	nc_//~~~STIMVAR~~~//[n] = new NetCon(s_//~~~STIMVAR~~~//[n],rsyn_//~~~STIMVAR~~~//[n],0,0,mcust.x[n][0])  //source, target, threshold, delay, weight
	   }
       }
//~~~BASAL~~~//
//~~~AXON~~~//
    if (mloc.x[n][0] == 1) {
       axon[dist] {

           s_//~~~STIMVAR~~~//[n] = new NetStims(rel)
           s_//~~~STIMVAR~~~//[n].interval=0  //time between spikes
           s_//~~~STIMVAR~~~//[n].number = 1   ///number of spikes
           s_//~~~STIMVAR~~~//[n].start=mtime.x[n][0]   ///start of first spike
           s_//~~~STIMVAR~~~//[n].noise=0

           	rsyn_//~~~STIMVAR~~~//[n] = new ~~**CUSTOM**~~(rel)
           	nc_//~~~STIMVAR~~~//[n] = new NetCon(s_//~~~STIMVAR~~~//[n],rsyn_//~~~STIMVAR~~~//[n],0,0,mcust.x[n][0])  //source, target, threshold, delay, weight
	   }
       }
//~~~AXON~~~//
}
